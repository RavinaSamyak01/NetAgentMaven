<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="30" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-17T13:50:59 IST" name="NetAgentSmokeTest" finished-at="2022-06-17T14:20:28 IST" duration-ms="1769205">
    <groups>
    </groups>
    <test started-at="2022-06-17T13:50:59 IST" name="ContactUS" finished-at="2022-06-17T13:51:05 IST" duration-ms="5881">
      <class name="netAgent_LogOutDiv.ContactUS">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_LogOutDiv.ContactUS@4310d43]" started-at="2022-06-17T13:50:59 IST" name="testMethodName" finished-at="2022-06-17T13:50:59 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_LogOutDiv.ContactUS.ContactUs() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ContactUs()[pri:0, instance:netAgent_LogOutDiv.ContactUS@4310d43]" started-at="2022-06-17T13:50:59 IST" name="ContactUs" finished-at="2022-06-17T13:51:05 IST" duration-ms="5612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContactUs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_LogOutDiv.ContactUS@4310d43]" started-at="2022-06-17T13:51:05 IST" name="getResult" finished-at="2022-06-17T13:51:05 IST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ContactUs status=SUCCESS method=ContactUS.ContactUs()[pri:0, instance:netAgent_LogOutDiv.ContactUS@4310d43] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_LogOutDiv.ContactUS -->
    </test> <!-- ContactUS -->
    <test started-at="2022-06-17T13:51:05 IST" name="AgentTSATraining" finished-at="2022-06-17T13:51:42 IST" duration-ms="36500">
      <class name="netAgent_LogOutDiv.AgentTSATraining">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@1e0b4072]" started-at="2022-06-17T13:51:05 IST" name="testMethodName" finished-at="2022-06-17T13:51:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_LogOutDiv.AgentTSATraining.AgentTSA() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentTSA()[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@1e0b4072]" started-at="2022-06-17T13:51:05 IST" name="AgentTSA" finished-at="2022-06-17T13:51:41 IST" duration-ms="36372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentTSA -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@1e0b4072]" started-at="2022-06-17T13:51:41 IST" name="getResult" finished-at="2022-06-17T13:51:42 IST" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentTSA status=SUCCESS method=AgentTSATraining.AgentTSA()[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@1e0b4072] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_LogOutDiv.AgentTSATraining -->
    </test> <!-- AgentTSATraining -->
    <test started-at="2022-06-17T13:51:42 IST" name="AgentElevatedTraining" finished-at="2022-06-17T13:52:30 IST" duration-ms="48552">
      <class name="netAgent_LogOutDiv.AgentElevatesRiskTraining">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@2794eab6]" started-at="2022-06-17T13:51:42 IST" name="testMethodName" finished-at="2022-06-17T13:51:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_LogOutDiv.AgentElevatesRiskTraining.AgentRisk() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentRisk()[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@2794eab6]" started-at="2022-06-17T13:51:42 IST" name="AgentRisk" finished-at="2022-06-17T13:52:30 IST" duration-ms="48418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentRisk -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@2794eab6]" started-at="2022-06-17T13:52:30 IST" name="getResult" finished-at="2022-06-17T13:52:30 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentRisk status=SUCCESS method=AgentElevatesRiskTraining.AgentRisk()[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@2794eab6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_LogOutDiv.AgentElevatesRiskTraining -->
    </test> <!-- AgentElevatedTraining -->
    <test started-at="2022-06-17T13:52:30 IST" name="TaskLog" finished-at="2022-06-17T13:55:38 IST" duration-ms="187953">
      <class name="netAgent_OperationsTab.TaskLog">
        <test-method signature="taskLog()[pri:0, instance:netAgent_OperationsTab.TaskLog@60099951]" started-at="2022-06-17T13:52:30 IST" name="taskLog" finished-at="2022-06-17T13:55:38 IST" duration-ms="187717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- taskLog -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.TaskLog@60099951]" started-at="2022-06-17T13:52:30 IST" name="testMethodName" finished-at="2022-06-17T13:52:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.TaskLog.taskLog() throws java.io.IOException,org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.TaskLog@60099951]" started-at="2022-06-17T13:55:38 IST" name="getResult" finished-at="2022-06-17T13:55:38 IST" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=taskLog status=SUCCESS method=TaskLog.taskLog()[pri:0, instance:netAgent_OperationsTab.TaskLog@60099951] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.TaskLog -->
    </test> <!-- TaskLog -->
    <test started-at="2022-06-17T13:55:38 IST" name="Receive To PutAway" finished-at="2022-06-17T13:55:42 IST" duration-ms="3497">
      <class name="netAgent_OperationsTab.ReceivePutAway">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.ReceivePutAway@71ba6d4e]" started-at="2022-06-17T13:55:38 IST" name="testMethodName" finished-at="2022-06-17T13:55:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_OperationsTab.ReceivePutAway.receivePutAway() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="receivePutAway()[pri:0, instance:netAgent_OperationsTab.ReceivePutAway@71ba6d4e]" started-at="2022-06-17T13:55:38 IST" name="receivePutAway" finished-at="2022-06-17T13:55:41 IST" duration-ms="3323" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebElement.click()" because the return value of "netAgent_OperationsTab.ReceivePutAway.isElementPresent(String)" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebElement.click()" because the return value of "netAgent_OperationsTab.ReceivePutAway.isElementPresent(String)" is null
at netAgent_OperationsTab.ReceivePutAway.receivePutAway(ReceivePutAway.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- receivePutAway -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.ReceivePutAway@71ba6d4e]" started-at="2022-06-17T13:55:41 IST" name="getResult" finished-at="2022-06-17T13:55:42 IST" duration-ms="167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=receivePutAway status=FAILURE method=ReceivePutAway.receivePutAway()[pri:0, instance:netAgent_OperationsTab.ReceivePutAway@71ba6d4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.ReceivePutAway -->
    </test> <!-- Receive To PutAway -->
    <test started-at="2022-06-17T13:55:42 IST" name="OrderSearch" finished-at="2022-06-17T13:56:21 IST" duration-ms="39316">
      <class name="netAgent_OperationsTab.OrderSearch">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.OrderSearch@5ab956d7]" started-at="2022-06-17T13:55:42 IST" name="testMethodName" finished-at="2022-06-17T13:55:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.OrderSearch.orderSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="orderSearch()[pri:0, instance:netAgent_OperationsTab.OrderSearch@5ab956d7]" started-at="2022-06-17T13:55:42 IST" name="orderSearch" finished-at="2022-06-17T13:56:21 IST" duration-ms="39137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderSearch -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.OrderSearch@5ab956d7]" started-at="2022-06-17T13:56:21 IST" name="getResult" finished-at="2022-06-17T13:56:21 IST" duration-ms="175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderSearch status=SUCCESS method=OrderSearch.orderSearch()[pri:0, instance:netAgent_OperationsTab.OrderSearch@5ab956d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.OrderSearch -->
    </test> <!-- OrderSearch -->
    <test started-at="2022-06-17T13:56:21 IST" name="Replenish" finished-at="2022-06-17T13:56:51 IST" duration-ms="29894">
      <class name="netAgent_OperationsTab.Replenish">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.Replenish@2a7f1f10]" started-at="2022-06-17T13:56:21 IST" name="testMethodName" finished-at="2022-06-17T13:56:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.Replenish.replenish() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="replenish()[pri:0, instance:netAgent_OperationsTab.Replenish@2a7f1f10]" started-at="2022-06-17T13:56:21 IST" name="replenish" finished-at="2022-06-17T13:56:51 IST" duration-ms="29773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- replenish -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.Replenish@2a7f1f10]" started-at="2022-06-17T13:56:51 IST" name="getResult" finished-at="2022-06-17T13:56:51 IST" duration-ms="118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=replenish status=SUCCESS method=Replenish.replenish()[pri:0, instance:netAgent_OperationsTab.Replenish@2a7f1f10] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.Replenish -->
    </test> <!-- Replenish -->
    <test started-at="2022-06-17T13:56:51 IST" name="CycleCount" finished-at="2022-06-17T13:58:45 IST" duration-ms="113752">
      <class name="netAgent_OperationsTab.CycleCount">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.CycleCount@2a265ea9]" started-at="2022-06-17T13:56:51 IST" name="testMethodName" finished-at="2022-06-17T13:56:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.CycleCount.cycleCount() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="cycleCount()[pri:0, instance:netAgent_OperationsTab.CycleCount@2a265ea9]" started-at="2022-06-17T13:56:51 IST" name="cycleCount" finished-at="2022-06-17T13:58:44 IST" duration-ms="113637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cycleCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.CycleCount@2a265ea9]" started-at="2022-06-17T13:58:44 IST" name="getResult" finished-at="2022-06-17T13:58:45 IST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cycleCount status=SUCCESS method=CycleCount.cycleCount()[pri:0, instance:netAgent_OperationsTab.CycleCount@2a265ea9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.CycleCount -->
    </test> <!-- CycleCount -->
    <test started-at="2022-06-17T13:58:45 IST" name="Courier" finished-at="2022-06-17T13:58:54 IST" duration-ms="9242">
      <class name="netAgent_OperationsTab.Courier">
        <test-method signature="courier()[pri:0, instance:netAgent_OperationsTab.Courier@449a4f23]" started-at="2022-06-17T13:58:45 IST" name="courier" finished-at="2022-06-17T13:58:54 IST" duration-ms="9123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courier -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.Courier@449a4f23]" started-at="2022-06-17T13:58:45 IST" name="testMethodName" finished-at="2022-06-17T13:58:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.Courier.courier() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.Courier@449a4f23]" started-at="2022-06-17T13:58:54 IST" name="getResult" finished-at="2022-06-17T13:58:54 IST" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=courier status=SUCCESS method=Courier.courier()[pri:0, instance:netAgent_OperationsTab.Courier@449a4f23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.Courier -->
    </test> <!-- Courier -->
    <test started-at="2022-06-17T13:58:54 IST" name="CCAttempt " finished-at="2022-06-17T14:04:53 IST" duration-ms="359237">
      <class name="netAgent_OperationsTab.CCAttempt">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.CCAttempt@2eae8e6e]" started-at="2022-06-17T13:58:54 IST" name="testMethodName" finished-at="2022-06-17T13:58:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_OperationsTab.CCAttempt.ccAttempt() throws java.io.IOException,org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ccAttempt()[pri:0, instance:netAgent_OperationsTab.CCAttempt@2eae8e6e]" started-at="2022-06-17T13:58:54 IST" name="ccAttempt" finished-at="2022-06-17T14:04:53 IST" duration-ms="359085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccAttempt -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.CCAttempt@2eae8e6e]" started-at="2022-06-17T14:04:53 IST" name="getResult" finished-at="2022-06-17T14:04:53 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccAttempt status=SUCCESS method=CCAttempt.ccAttempt()[pri:0, instance:netAgent_OperationsTab.CCAttempt@2eae8e6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.CCAttempt -->
    </test> <!-- CCAttempt  -->
    <test started-at="2022-06-17T14:04:53 IST" name="Parts" finished-at="2022-06-17T14:06:05 IST" duration-ms="71476">
      <class name="netAgent_Inventory.Parts">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.Parts@25ce9dc4]" started-at="2022-06-17T14:04:53 IST" name="testMethodName" finished-at="2022-06-17T14:04:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_Inventory.Parts.parts() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="parts()[pri:0, instance:netAgent_Inventory.Parts@25ce9dc4]" started-at="2022-06-17T14:04:53 IST" name="parts" finished-at="2022-06-17T14:06:04 IST" duration-ms="71325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.Parts@25ce9dc4]" started-at="2022-06-17T14:06:04 IST" name="getResult" finished-at="2022-06-17T14:06:05 IST" duration-ms="149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parts status=SUCCESS method=Parts.parts()[pri:0, instance:netAgent_Inventory.Parts@25ce9dc4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.Parts -->
    </test> <!-- Parts -->
    <test started-at="2022-06-17T14:06:05 IST" name="FSL Storage" finished-at="2022-06-17T14:06:13 IST" duration-ms="8661">
      <class name="netAgent_Inventory.FSLStorage">
        <test-method signature="fSLStorage()[pri:0, instance:netAgent_Inventory.FSLStorage@5d0bf09b]" started-at="2022-06-17T14:06:05 IST" name="fSLStorage" finished-at="2022-06-17T14:06:13 IST" duration-ms="8482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fSLStorage -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.FSLStorage@5d0bf09b]" started-at="2022-06-17T14:06:05 IST" name="testMethodName" finished-at="2022-06-17T14:06:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.FSLStorage.fSLStorage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.FSLStorage@5d0bf09b]" started-at="2022-06-17T14:06:13 IST" name="getResult" finished-at="2022-06-17T14:06:13 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fSLStorage status=SUCCESS method=FSLStorage.fSLStorage()[pri:0, instance:netAgent_Inventory.FSLStorage@5d0bf09b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.FSLStorage -->
    </test> <!-- FSL Storage -->
    <test started-at="2022-06-17T14:06:13 IST" name="FSL SetUp" finished-at="2022-06-17T14:08:49 IST" duration-ms="155699">
      <class name="netAgent_Inventory.FSLSetUp">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.FSLSetUp@3e27ba32]" started-at="2022-06-17T14:06:13 IST" name="testMethodName" finished-at="2022-06-17T14:06:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.FSLSetUp.fSLSetup() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="fSLSetup()[pri:0, instance:netAgent_Inventory.FSLSetUp@3e27ba32]" started-at="2022-06-17T14:06:13 IST" name="fSLSetup" finished-at="2022-06-17T14:08:49 IST" duration-ms="155491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fSLSetup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.FSLSetUp@3e27ba32]" started-at="2022-06-17T14:08:49 IST" name="getResult" finished-at="2022-06-17T14:08:49 IST" duration-ms="203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fSLSetup status=SUCCESS method=FSLSetUp.fSLSetup()[pri:0, instance:netAgent_Inventory.FSLSetUp@3e27ba32] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.FSLSetUp -->
    </test> <!-- FSL SetUp -->
    <test started-at="2022-06-17T14:08:49 IST" name="Cycle Count Bin" finished-at="2022-06-17T14:09:00 IST" duration-ms="10767">
      <class name="netAgent_Inventory.CycleCountBin">
        <test-method signature="cycleCountBIN()[pri:0, instance:netAgent_Inventory.CycleCountBin@2034b64c]" started-at="2022-06-17T14:08:49 IST" name="cycleCountBIN" finished-at="2022-06-17T14:09:00 IST" duration-ms="10655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cycleCountBIN -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.CycleCountBin@2034b64c]" started-at="2022-06-17T14:08:49 IST" name="testMethodName" finished-at="2022-06-17T14:08:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.CycleCountBin.cycleCountBIN() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.CycleCountBin@2034b64c]" started-at="2022-06-17T14:09:00 IST" name="getResult" finished-at="2022-06-17T14:09:00 IST" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cycleCountBIN status=SUCCESS method=CycleCountBin.cycleCountBIN()[pri:0, instance:netAgent_Inventory.CycleCountBin@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.CycleCountBin -->
    </test> <!-- Cycle Count Bin -->
    <test started-at="2022-06-17T14:09:00 IST" name="PutAway" finished-at="2022-06-17T14:09:24 IST" duration-ms="24070">
      <class name="netAgent_Inventory.PutAway">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.PutAway@19e4653c]" started-at="2022-06-17T14:09:00 IST" name="testMethodName" finished-at="2022-06-17T14:09:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_Inventory.PutAway.putAway() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="putAway()[pri:0, instance:netAgent_Inventory.PutAway@19e4653c]" started-at="2022-06-17T14:09:00 IST" name="putAway" finished-at="2022-06-17T14:09:24 IST" duration-ms="23836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putAway -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.PutAway@19e4653c]" started-at="2022-06-17T14:09:24 IST" name="getResult" finished-at="2022-06-17T14:09:24 IST" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=putAway status=SUCCESS method=PutAway.putAway()[pri:0, instance:netAgent_Inventory.PutAway@19e4653c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.PutAway -->
    </test> <!-- PutAway -->
    <test started-at="2022-06-17T14:09:24 IST" name="ASN Log" finished-at="2022-06-17T14:10:48 IST" duration-ms="83841">
      <class name="netAgent_Inventory.ASNLog">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.ASNLog@548d708a]" started-at="2022-06-17T14:09:24 IST" name="testMethodName" finished-at="2022-06-17T14:09:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.ASNLog.aSNLog() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="aSNLog()[pri:0, instance:netAgent_Inventory.ASNLog@548d708a]" started-at="2022-06-17T14:09:24 IST" name="aSNLog" finished-at="2022-06-17T14:10:47 IST" duration-ms="83660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aSNLog -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.ASNLog@548d708a]" started-at="2022-06-17T14:10:47 IST" name="getResult" finished-at="2022-06-17T14:10:48 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aSNLog status=SUCCESS method=ASNLog.aSNLog()[pri:0, instance:netAgent_Inventory.ASNLog@548d708a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.ASNLog -->
    </test> <!-- ASN Log -->
    <test started-at="2022-06-17T14:10:48 IST" name="Agent Activity" finished-at="2022-06-17T14:11:28 IST" duration-ms="40731">
      <class name="netAgent_Reports.AgentActivity">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.AgentActivity@350aac89]" started-at="2022-06-17T14:10:48 IST" name="testMethodName" finished-at="2022-06-17T14:10:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.AgentActivity.AgentActivityReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityReport()[pri:0, instance:netAgent_Reports.AgentActivity@350aac89]" started-at="2022-06-17T14:10:48 IST" name="AgentActivityReport" finished-at="2022-06-17T14:11:28 IST" duration-ms="40554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.AgentActivity@350aac89]" started-at="2022-06-17T14:11:28 IST" name="getResult" finished-at="2022-06-17T14:11:28 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityReport status=SUCCESS method=AgentActivity.AgentActivityReport()[pri:0, instance:netAgent_Reports.AgentActivity@350aac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.AgentActivity -->
    </test> <!-- Agent Activity -->
    <test started-at="2022-06-17T14:11:28 IST" name="Agent Activity Chart" finished-at="2022-06-17T14:12:04 IST" duration-ms="35270">
      <class name="netAgent_Reports.AgentActivityChart">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.AgentActivityChart@4a83a74a]" started-at="2022-06-17T14:11:28 IST" name="testMethodName" finished-at="2022-06-17T14:11:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.AgentActivityChart.AgentActivityChartReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityChartReport()[pri:0, instance:netAgent_Reports.AgentActivityChart@4a83a74a]" started-at="2022-06-17T14:11:28 IST" name="AgentActivityChartReport" finished-at="2022-06-17T14:12:03 IST" duration-ms="35086" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityChartReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.AgentActivityChart@4a83a74a]" started-at="2022-06-17T14:12:03 IST" name="getResult" finished-at="2022-06-17T14:12:04 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityChartReport status=SUCCESS method=AgentActivityChart.AgentActivityChartReport()[pri:0, instance:netAgent_Reports.AgentActivityChart@4a83a74a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.AgentActivityChart -->
    </test> <!-- Agent Activity Chart -->
    <test started-at="2022-06-17T14:12:04 IST" name="Agent Activity Detail" finished-at="2022-06-17T14:12:37 IST" duration-ms="33433">
      <class name="netAgent_Reports.AgentActivityDetail">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.AgentActivityDetail@35dab4eb]" started-at="2022-06-17T14:12:04 IST" name="testMethodName" finished-at="2022-06-17T14:12:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.AgentActivityDetail.agentActivityDetailReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="agentActivityDetailReport()[pri:0, instance:netAgent_Reports.AgentActivityDetail@35dab4eb]" started-at="2022-06-17T14:12:04 IST" name="agentActivityDetailReport" finished-at="2022-06-17T14:12:37 IST" duration-ms="33276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentActivityDetailReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.AgentActivityDetail@35dab4eb]" started-at="2022-06-17T14:12:37 IST" name="getResult" finished-at="2022-06-17T14:12:37 IST" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=agentActivityDetailReport status=SUCCESS method=AgentActivityDetail.agentActivityDetailReport()[pri:0, instance:netAgent_Reports.AgentActivityDetail@35dab4eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.AgentActivityDetail -->
    </test> <!-- Agent Activity Detail -->
    <test started-at="2022-06-17T14:12:37 IST" name="Quarantine Report" finished-at="2022-06-17T14:13:08 IST" duration-ms="30559">
      <class name="netAgent_Reports.QuarantineReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.QuarantineReport@72035809]" started-at="2022-06-17T14:12:37 IST" name="testMethodName" finished-at="2022-06-17T14:12:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.QuarantineReport.quarantineReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="quarantineReport()[pri:0, instance:netAgent_Reports.QuarantineReport@72035809]" started-at="2022-06-17T14:12:37 IST" name="quarantineReport" finished-at="2022-06-17T14:13:07 IST" duration-ms="30348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quarantineReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.QuarantineReport@72035809]" started-at="2022-06-17T14:13:07 IST" name="getResult" finished-at="2022-06-17T14:13:08 IST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=quarantineReport status=SUCCESS method=QuarantineReport.quarantineReport()[pri:0, instance:netAgent_Reports.QuarantineReport@72035809] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.QuarantineReport -->
    </test> <!-- Quarantine Report -->
    <test started-at="2022-06-17T14:13:08 IST" name="RTE Driver Billing Report" finished-at="2022-06-17T14:13:42 IST" duration-ms="34839">
      <class name="netAgent_Reports.RTEDriverBilling">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.RTEDriverBilling@7a35b0f5]" started-at="2022-06-17T14:13:08 IST" name="testMethodName" finished-at="2022-06-17T14:13:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.RTEDriverBilling.rteDriverBillingReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="rteDriverBillingReport()[pri:0, instance:netAgent_Reports.RTEDriverBilling@7a35b0f5]" started-at="2022-06-17T14:13:08 IST" name="rteDriverBillingReport" finished-at="2022-06-17T14:13:42 IST" duration-ms="34673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rteDriverBillingReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.RTEDriverBilling@7a35b0f5]" started-at="2022-06-17T14:13:42 IST" name="getResult" finished-at="2022-06-17T14:13:42 IST" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rteDriverBillingReport status=SUCCESS method=RTEDriverBilling.rteDriverBillingReport()[pri:0, instance:netAgent_Reports.RTEDriverBilling@7a35b0f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.RTEDriverBilling -->
    </test> <!-- RTE Driver Billing Report -->
    <test started-at="2022-06-17T14:13:43 IST" name="Inventory OnHand Report" finished-at="2022-06-17T14:14:25 IST" duration-ms="42828">
      <class name="netAgent_Reports.InventoryOnHandReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryOnHandReport@413d1baf]" started-at="2022-06-17T14:13:43 IST" name="testMethodName" finished-at="2022-06-17T14:13:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryOnHandReport.OnHandReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="OnHandReport()[pri:0, instance:netAgent_Reports.InventoryOnHandReport@413d1baf]" started-at="2022-06-17T14:13:43 IST" name="OnHandReport" finished-at="2022-06-17T14:14:25 IST" duration-ms="42711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnHandReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryOnHandReport@413d1baf]" started-at="2022-06-17T14:14:25 IST" name="getResult" finished-at="2022-06-17T14:14:25 IST" duration-ms="115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OnHandReport status=SUCCESS method=InventoryOnHandReport.OnHandReport()[pri:0, instance:netAgent_Reports.InventoryOnHandReport@413d1baf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryOnHandReport -->
    </test> <!-- Inventory OnHand Report -->
    <test started-at="2022-06-17T14:14:25 IST" name="Inventory Pull Report" finished-at="2022-06-17T14:15:10 IST" duration-ms="44442">
      <class name="netAgent_Reports.InventoryPullReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryPullReport@48bb62]" started-at="2022-06-17T14:14:25 IST" name="testMethodName" finished-at="2022-06-17T14:14:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryPullReport.PullReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="PullReport()[pri:0, instance:netAgent_Reports.InventoryPullReport@48bb62]" started-at="2022-06-17T14:14:25 IST" name="PullReport" finished-at="2022-06-17T14:15:10 IST" duration-ms="44243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PullReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryPullReport@48bb62]" started-at="2022-06-17T14:15:10 IST" name="getResult" finished-at="2022-06-17T14:15:10 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PullReport status=SUCCESS method=InventoryPullReport.PullReport()[pri:0, instance:netAgent_Reports.InventoryPullReport@48bb62] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryPullReport -->
    </test> <!-- Inventory Pull Report -->
    <test started-at="2022-06-17T14:15:10 IST" name="Inventory Receipt Report" finished-at="2022-06-17T14:16:48 IST" duration-ms="97923">
      <class name="netAgent_Reports.InventoryReceiptReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryReceiptReport@710c2b53]" started-at="2022-06-17T14:15:10 IST" name="testMethodName" finished-at="2022-06-17T14:15:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryReceiptReport.ReceiptReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ReceiptReport()[pri:0, instance:netAgent_Reports.InventoryReceiptReport@710c2b53]" started-at="2022-06-17T14:15:10 IST" name="ReceiptReport" finished-at="2022-06-17T14:16:48 IST" duration-ms="97791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiptReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryReceiptReport@710c2b53]" started-at="2022-06-17T14:16:48 IST" name="getResult" finished-at="2022-06-17T14:16:48 IST" duration-ms="125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiptReport status=SUCCESS method=InventoryReceiptReport.ReceiptReport()[pri:0, instance:netAgent_Reports.InventoryReceiptReport@710c2b53] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryReceiptReport -->
    </test> <!-- Inventory Receipt Report -->
    <test started-at="2022-06-17T14:16:48 IST" name="Inventory Transaction Report" finished-at="2022-06-17T14:17:35 IST" duration-ms="47229">
      <class name="netAgent_Reports.InventoryTransactionReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryTransactionReport@1750fbeb]" started-at="2022-06-17T14:16:48 IST" name="testMethodName" finished-at="2022-06-17T14:16:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryTransactionReport.TransactionReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="TransactionReport()[pri:0, instance:netAgent_Reports.InventoryTransactionReport@1750fbeb]" started-at="2022-06-17T14:16:48 IST" name="TransactionReport" finished-at="2022-06-17T14:17:35 IST" duration-ms="47039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryTransactionReport@1750fbeb]" started-at="2022-06-17T14:17:35 IST" name="getResult" finished-at="2022-06-17T14:17:35 IST" duration-ms="183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionReport status=SUCCESS method=InventoryTransactionReport.TransactionReport()[pri:0, instance:netAgent_Reports.InventoryTransactionReport@1750fbeb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryTransactionReport -->
    </test> <!-- Inventory Transaction Report -->
    <test started-at="2022-06-17T14:17:35 IST" name="User Profile" finished-at="2022-06-17T14:17:43 IST" duration-ms="8354">
      <class name="netAgent_Admin.UserProfile">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Admin.UserProfile@6440112d]" started-at="2022-06-17T14:17:35 IST" name="testMethodName" finished-at="2022-06-17T14:17:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Admin.UserProfile.userprofile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="userprofile()[pri:0, instance:netAgent_Admin.UserProfile@6440112d]" started-at="2022-06-17T14:17:35 IST" name="userprofile" finished-at="2022-06-17T14:17:43 IST" duration-ms="8175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userprofile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Admin.UserProfile@6440112d]" started-at="2022-06-17T14:17:43 IST" name="getResult" finished-at="2022-06-17T14:17:43 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userprofile status=SUCCESS method=UserProfile.userprofile()[pri:0, instance:netAgent_Admin.UserProfile@6440112d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Admin.UserProfile -->
    </test> <!-- User Profile -->
    <test started-at="2022-06-17T14:17:43 IST" name="UserList" finished-at="2022-06-17T14:18:14 IST" duration-ms="30720">
      <class name="netAgent_Admin.UserList">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Admin.UserList@451001e5]" started-at="2022-06-17T14:17:43 IST" name="testMethodName" finished-at="2022-06-17T14:17:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Admin.UserList.userlist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="userlist()[pri:0, instance:netAgent_Admin.UserList@451001e5]" started-at="2022-06-17T14:17:43 IST" name="userlist" finished-at="2022-06-17T14:18:14 IST" duration-ms="30540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userlist -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Admin.UserList@451001e5]" started-at="2022-06-17T14:18:14 IST" name="getResult" finished-at="2022-06-17T14:18:14 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userlist status=SUCCESS method=UserList.userlist()[pri:0, instance:netAgent_Admin.UserList@451001e5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Admin.UserList -->
    </test> <!-- UserList -->
    <test started-at="2022-06-17T14:18:14 IST" name="Agent Console" finished-at="2022-06-17T14:19:50 IST" duration-ms="95818">
      <class name="netAgent_Tools.AgentConsole">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Tools.AgentConsole@70ed52de]" started-at="2022-06-17T14:18:14 IST" name="testMethodName" finished-at="2022-06-17T14:18:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Tools.AgentConsole.agentConsole() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="agentConsole()[pri:0, instance:netAgent_Tools.AgentConsole@70ed52de]" started-at="2022-06-17T14:18:14 IST" name="agentConsole" finished-at="2022-06-17T14:19:50 IST" duration-ms="95685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentConsole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Tools.AgentConsole@70ed52de]" started-at="2022-06-17T14:19:50 IST" name="getResult" finished-at="2022-06-17T14:19:50 IST" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=agentConsole status=SUCCESS method=AgentConsole.agentConsole()[pri:0, instance:netAgent_Tools.AgentConsole@70ed52de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Tools.AgentConsole -->
    </test> <!-- Agent Console -->
    <test started-at="2022-06-17T14:19:50 IST" name="Mileage Calculation" finished-at="2022-06-17T14:20:02 IST" duration-ms="12469">
      <class name="netAgent_Tools.MileageCalc">
        <test-method signature="mileageCalc()[pri:0, instance:netAgent_Tools.MileageCalc@1033576a]" started-at="2022-06-17T14:19:50 IST" name="mileageCalc" finished-at="2022-06-17T14:20:02 IST" duration-ms="12323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mileageCalc -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Tools.MileageCalc@1033576a]" started-at="2022-06-17T14:19:50 IST" name="testMethodName" finished-at="2022-06-17T14:19:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Tools.MileageCalc.mileageCalc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Tools.MileageCalc@1033576a]" started-at="2022-06-17T14:20:02 IST" name="getResult" finished-at="2022-06-17T14:20:02 IST" duration-ms="144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mileageCalc status=SUCCESS method=MileageCalc.mileageCalc()[pri:0, instance:netAgent_Tools.MileageCalc@1033576a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Tools.MileageCalc -->
    </test> <!-- Mileage Calculation -->
    <test started-at="2022-06-17T14:20:02 IST" name="MNXDocuments" finished-at="2022-06-17T14:20:15 IST" duration-ms="13064">
      <class name="netAgent_Tools.MNXDocuments">
        <test-method signature="MNXDoc()[pri:0, instance:netAgent_Tools.MNXDocuments@609e8838]" started-at="2022-06-17T14:20:02 IST" name="MNXDoc" finished-at="2022-06-17T14:20:15 IST" duration-ms="12954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MNXDoc -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Tools.MNXDocuments@609e8838]" started-at="2022-06-17T14:20:02 IST" name="testMethodName" finished-at="2022-06-17T14:20:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Tools.MNXDocuments.MNXDoc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Tools.MNXDocuments@609e8838]" started-at="2022-06-17T14:20:15 IST" name="getResult" finished-at="2022-06-17T14:20:15 IST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MNXDoc status=SUCCESS method=MNXDocuments.MNXDoc()[pri:0, instance:netAgent_Tools.MNXDocuments@609e8838] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Tools.MNXDocuments -->
    </test> <!-- MNXDocuments -->
    <test started-at="2022-06-17T14:20:15 IST" name="User Preferences" finished-at="2022-06-17T14:20:28 IST" duration-ms="12905">
      <class name="netAgent_Preferences.UserPreferences">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:netAgent_Preferences.UserPreferences@73eb439a]" started-at="2022-06-17T13:50:31 IST" name="beforeMethod" finished-at="2022-06-17T13:50:59 IST" duration-ms="27743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Preferences.UserPreferences@73eb439a]" started-at="2022-06-17T14:20:15 IST" name="testMethodName" finished-at="2022-06-17T14:20:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Preferences.UserPreferences.UserPreference() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="UserPreference()[pri:0, instance:netAgent_Preferences.UserPreferences@73eb439a]" started-at="2022-06-17T14:20:15 IST" name="UserPreference" finished-at="2022-06-17T14:20:28 IST" duration-ms="12648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserPreference -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Preferences.UserPreferences@73eb439a]" started-at="2022-06-17T14:20:28 IST" name="getResult" finished-at="2022-06-17T14:20:28 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserPreference status=SUCCESS method=UserPreferences.UserPreference()[pri:0, instance:netAgent_Preferences.UserPreferences@73eb439a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="SendEmail()[pri:0, instance:netAgent_Preferences.UserPreferences@73eb439a]" started-at="2022-06-17T14:20:29 IST" name="SendEmail" finished-at="2022-06-17T14:20:40 IST" duration-ms="11276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendEmail -->
      </class> <!-- netAgent_Preferences.UserPreferences -->
    </test> <!-- User Preferences -->
  </suite> <!-- NetAgentSmokeTest -->
</testng-results>
