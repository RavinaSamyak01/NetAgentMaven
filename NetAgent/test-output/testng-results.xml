<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="31" passed="31" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-10T16:12:07 IST" name="NetAgentSmokeTest" finished-at="2022-06-10T17:32:04 IST" duration-ms="4797758">
    <groups>
    </groups>
    <test started-at="2022-06-10T16:12:07 IST" name="ContactUS" finished-at="2022-06-10T16:12:12 IST" duration-ms="5101">
      <class name="netAgent_LogOutDiv.ContactUS">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_LogOutDiv.ContactUS@54a7079e]" started-at="2022-06-10T16:12:07 IST" name="testMethodName" finished-at="2022-06-10T16:12:07 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_LogOutDiv.ContactUS.ContactUs() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ContactUs()[pri:0, instance:netAgent_LogOutDiv.ContactUS@54a7079e]" started-at="2022-06-10T16:12:07 IST" name="ContactUs" finished-at="2022-06-10T16:12:12 IST" duration-ms="4945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContactUs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_LogOutDiv.ContactUS@54a7079e]" started-at="2022-06-10T16:12:12 IST" name="getResult" finished-at="2022-06-10T16:12:12 IST" duration-ms="123" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ContactUs status=SUCCESS method=ContactUS.ContactUs()[pri:0, instance:netAgent_LogOutDiv.ContactUS@54a7079e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_LogOutDiv.ContactUS -->
    </test> <!-- ContactUS -->
    <test started-at="2022-06-10T16:12:12 IST" name="AgentTSATraining" finished-at="2022-06-10T16:12:46 IST" duration-ms="34450">
      <class name="netAgent_LogOutDiv.AgentTSATraining">
        <test-method signature="AgentTSA()[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@791f145a]" started-at="2022-06-10T16:12:12 IST" name="AgentTSA" finished-at="2022-06-10T16:12:46 IST" duration-ms="34313" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentTSA -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@791f145a]" started-at="2022-06-10T16:12:12 IST" name="testMethodName" finished-at="2022-06-10T16:12:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_LogOutDiv.AgentTSATraining.AgentTSA() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@791f145a]" started-at="2022-06-10T16:12:46 IST" name="getResult" finished-at="2022-06-10T16:12:46 IST" duration-ms="135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentTSA status=SUCCESS method=AgentTSATraining.AgentTSA()[pri:0, instance:netAgent_LogOutDiv.AgentTSATraining@791f145a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_LogOutDiv.AgentTSATraining -->
    </test> <!-- AgentTSATraining -->
    <test started-at="2022-06-10T16:12:46 IST" name="AgentElevatedTraining" finished-at="2022-06-10T16:13:37 IST" duration-ms="50339">
      <class name="netAgent_LogOutDiv.AgentElevatesRiskTraining">
        <test-method signature="AgentRisk()[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@6340e5f0]" started-at="2022-06-10T16:12:46 IST" name="AgentRisk" finished-at="2022-06-10T16:13:36 IST" duration-ms="50243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentRisk -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@6340e5f0]" started-at="2022-06-10T16:12:46 IST" name="testMethodName" finished-at="2022-06-10T16:12:46 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_LogOutDiv.AgentElevatesRiskTraining.AgentRisk() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@6340e5f0]" started-at="2022-06-10T16:13:36 IST" name="getResult" finished-at="2022-06-10T16:13:37 IST" duration-ms="94" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentRisk status=SUCCESS method=AgentElevatesRiskTraining.AgentRisk()[pri:0, instance:netAgent_LogOutDiv.AgentElevatesRiskTraining@6340e5f0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_LogOutDiv.AgentElevatesRiskTraining -->
    </test> <!-- AgentElevatedTraining -->
    <test started-at="2022-06-10T16:13:37 IST" name="TaskLog" finished-at="2022-06-10T16:16:00 IST" duration-ms="143077">
      <class name="netAgent_OperationsTab.TaskLog">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.TaskLog@20140db9]" started-at="2022-06-10T16:13:37 IST" name="testMethodName" finished-at="2022-06-10T16:13:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.TaskLog.taskLog() throws java.io.IOException,org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="taskLog()[pri:0, instance:netAgent_OperationsTab.TaskLog@20140db9]" started-at="2022-06-10T16:13:37 IST" name="taskLog" finished-at="2022-06-10T16:16:00 IST" duration-ms="142979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- taskLog -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.TaskLog@20140db9]" started-at="2022-06-10T16:16:00 IST" name="getResult" finished-at="2022-06-10T16:16:00 IST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=taskLog status=SUCCESS method=TaskLog.taskLog()[pri:0, instance:netAgent_OperationsTab.TaskLog@20140db9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.TaskLog -->
    </test> <!-- TaskLog -->
    <test started-at="2022-06-10T16:16:00 IST" name="OrderSearch" finished-at="2022-06-10T16:16:34 IST" duration-ms="34568">
      <class name="netAgent_OperationsTab.OrderSearch">
        <test-method signature="orderSearch()[pri:0, instance:netAgent_OperationsTab.OrderSearch@738dc9b]" started-at="2022-06-10T16:16:00 IST" name="orderSearch" finished-at="2022-06-10T16:16:34 IST" duration-ms="34454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderSearch -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.OrderSearch@738dc9b]" started-at="2022-06-10T16:16:00 IST" name="testMethodName" finished-at="2022-06-10T16:16:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.OrderSearch.orderSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.OrderSearch@738dc9b]" started-at="2022-06-10T16:16:34 IST" name="getResult" finished-at="2022-06-10T16:16:34 IST" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderSearch status=SUCCESS method=OrderSearch.orderSearch()[pri:0, instance:netAgent_OperationsTab.OrderSearch@738dc9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.OrderSearch -->
    </test> <!-- OrderSearch -->
    <test started-at="2022-06-10T16:16:34 IST" name="Replenish" finished-at="2022-06-10T16:17:01 IST" duration-ms="26763">
      <class name="netAgent_OperationsTab.Replenish">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.Replenish@3646a422]" started-at="2022-06-10T16:16:34 IST" name="testMethodName" finished-at="2022-06-10T16:16:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.Replenish.replenish() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="replenish()[pri:0, instance:netAgent_OperationsTab.Replenish@3646a422]" started-at="2022-06-10T16:16:34 IST" name="replenish" finished-at="2022-06-10T16:17:01 IST" duration-ms="26660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- replenish -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.Replenish@3646a422]" started-at="2022-06-10T16:17:01 IST" name="getResult" finished-at="2022-06-10T16:17:01 IST" duration-ms="101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=replenish status=SUCCESS method=Replenish.replenish()[pri:0, instance:netAgent_OperationsTab.Replenish@3646a422] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.Replenish -->
    </test> <!-- Replenish -->
    <test started-at="2022-06-10T16:17:01 IST" name="CycleCount" finished-at="2022-06-10T16:18:49 IST" duration-ms="107912">
      <class name="netAgent_OperationsTab.CycleCount">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.CycleCount@46cdf8bd]" started-at="2022-06-10T16:17:01 IST" name="testMethodName" finished-at="2022-06-10T16:17:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.CycleCount.cycleCount() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="cycleCount()[pri:0, instance:netAgent_OperationsTab.CycleCount@46cdf8bd]" started-at="2022-06-10T16:17:01 IST" name="cycleCount" finished-at="2022-06-10T16:18:49 IST" duration-ms="107809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cycleCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.CycleCount@46cdf8bd]" started-at="2022-06-10T16:18:49 IST" name="getResult" finished-at="2022-06-10T16:18:49 IST" duration-ms="100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cycleCount status=SUCCESS method=CycleCount.cycleCount()[pri:0, instance:netAgent_OperationsTab.CycleCount@46cdf8bd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.CycleCount -->
    </test> <!-- CycleCount -->
    <test started-at="2022-06-10T16:18:49 IST" name="Courier" finished-at="2022-06-10T16:18:54 IST" duration-ms="5412">
      <class name="netAgent_OperationsTab.Courier">
        <test-method signature="courier()[pri:0, instance:netAgent_OperationsTab.Courier@11392934]" started-at="2022-06-10T16:18:49 IST" name="courier" finished-at="2022-06-10T16:18:54 IST" duration-ms="5311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courier -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.Courier@11392934]" started-at="2022-06-10T16:18:49 IST" name="testMethodName" finished-at="2022-06-10T16:18:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.Courier.courier() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.Courier@11392934]" started-at="2022-06-10T16:18:54 IST" name="getResult" finished-at="2022-06-10T16:18:54 IST" duration-ms="99" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=courier status=SUCCESS method=Courier.courier()[pri:0, instance:netAgent_OperationsTab.Courier@11392934] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.Courier -->
    </test> <!-- Courier -->
    <test started-at="2022-06-10T16:18:54 IST" name="CCAttempt " finished-at="2022-06-10T16:25:17 IST" duration-ms="382299">
      <class name="netAgent_OperationsTab.CCAttempt">
        <test-method signature="ccAttempt()[pri:0, instance:netAgent_OperationsTab.CCAttempt@5b1669c0]" started-at="2022-06-10T16:18:54 IST" name="ccAttempt" finished-at="2022-06-10T16:25:17 IST" duration-ms="382189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ccAttempt -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.CCAttempt@5b1669c0]" started-at="2022-06-10T16:18:54 IST" name="testMethodName" finished-at="2022-06-10T16:18:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_OperationsTab.CCAttempt.ccAttempt() throws java.io.IOException,org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.CCAttempt@5b1669c0]" started-at="2022-06-10T16:25:17 IST" name="getResult" finished-at="2022-06-10T16:25:17 IST" duration-ms="109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ccAttempt status=SUCCESS method=CCAttempt.ccAttempt()[pri:0, instance:netAgent_OperationsTab.CCAttempt@5b1669c0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_OperationsTab.CCAttempt -->
    </test> <!-- CCAttempt  -->
    <test started-at="2022-06-10T16:25:17 IST" name="Parts" finished-at="2022-06-10T16:25:56 IST" duration-ms="39430">
      <class name="netAgent_Inventory.Parts">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.Parts@8f2ef19]" started-at="2022-06-10T16:25:17 IST" name="testMethodName" finished-at="2022-06-10T16:25:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_Inventory.Parts.parts() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="parts()[pri:0, instance:netAgent_Inventory.Parts@8f2ef19]" started-at="2022-06-10T16:25:17 IST" name="parts" finished-at="2022-06-10T16:25:56 IST" duration-ms="39314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.Parts@8f2ef19]" started-at="2022-06-10T16:25:56 IST" name="getResult" finished-at="2022-06-10T16:25:56 IST" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parts status=SUCCESS method=Parts.parts()[pri:0, instance:netAgent_Inventory.Parts@8f2ef19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.Parts -->
    </test> <!-- Parts -->
    <test started-at="2022-06-10T16:25:56 IST" name="FSL Storage" finished-at="2022-06-10T16:26:02 IST" duration-ms="6353">
      <class name="netAgent_Inventory.FSLStorage">
        <test-method signature="fSLStorage()[pri:0, instance:netAgent_Inventory.FSLStorage@74ea2410]" started-at="2022-06-10T16:25:56 IST" name="fSLStorage" finished-at="2022-06-10T16:26:02 IST" duration-ms="6250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fSLStorage -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.FSLStorage@74ea2410]" started-at="2022-06-10T16:25:56 IST" name="testMethodName" finished-at="2022-06-10T16:25:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.FSLStorage.fSLStorage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.FSLStorage@74ea2410]" started-at="2022-06-10T16:26:02 IST" name="getResult" finished-at="2022-06-10T16:26:02 IST" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fSLStorage status=SUCCESS method=FSLStorage.fSLStorage()[pri:0, instance:netAgent_Inventory.FSLStorage@74ea2410] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.FSLStorage -->
    </test> <!-- FSL Storage -->
    <test started-at="2022-06-10T16:26:02 IST" name="FSL SetUp" finished-at="2022-06-10T16:27:48 IST" duration-ms="105918">
      <class name="netAgent_Inventory.FSLSetUp">
        <test-method signature="fSLSetup()[pri:0, instance:netAgent_Inventory.FSLSetUp@793f29ff]" started-at="2022-06-10T16:26:02 IST" name="fSLSetup" finished-at="2022-06-10T16:27:48 IST" duration-ms="105819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fSLSetup -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.FSLSetUp@793f29ff]" started-at="2022-06-10T16:26:02 IST" name="testMethodName" finished-at="2022-06-10T16:26:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.FSLSetUp.fSLSetup() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.FSLSetUp@793f29ff]" started-at="2022-06-10T16:27:48 IST" name="getResult" finished-at="2022-06-10T16:27:48 IST" duration-ms="98" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=fSLSetup status=SUCCESS method=FSLSetUp.fSLSetup()[pri:0, instance:netAgent_Inventory.FSLSetUp@793f29ff] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.FSLSetUp -->
    </test> <!-- FSL SetUp -->
    <test started-at="2022-06-10T16:27:48 IST" name="Cycle Count Bin" finished-at="2022-06-10T16:27:59 IST" duration-ms="10397">
      <class name="netAgent_Inventory.CycleCountBin">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.CycleCountBin@7ef82753]" started-at="2022-06-10T16:27:48 IST" name="testMethodName" finished-at="2022-06-10T16:27:48 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.CycleCountBin.cycleCountBIN() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="cycleCountBIN()[pri:0, instance:netAgent_Inventory.CycleCountBin@7ef82753]" started-at="2022-06-10T16:27:48 IST" name="cycleCountBIN" finished-at="2022-06-10T16:27:59 IST" duration-ms="10287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cycleCountBIN -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.CycleCountBin@7ef82753]" started-at="2022-06-10T16:27:59 IST" name="getResult" finished-at="2022-06-10T16:27:59 IST" duration-ms="108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cycleCountBIN status=SUCCESS method=CycleCountBin.cycleCountBIN()[pri:0, instance:netAgent_Inventory.CycleCountBin@7ef82753] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.CycleCountBin -->
    </test> <!-- Cycle Count Bin -->
    <test started-at="2022-06-10T16:27:59 IST" name="PutAway" finished-at="2022-06-10T16:28:26 IST" duration-ms="27570">
      <class name="netAgent_Inventory.PutAway">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.PutAway@75d3a5e0]" started-at="2022-06-10T16:27:59 IST" name="testMethodName" finished-at="2022-06-10T16:27:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_Inventory.PutAway.putAway() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="putAway()[pri:0, instance:netAgent_Inventory.PutAway@75d3a5e0]" started-at="2022-06-10T16:27:59 IST" name="putAway" finished-at="2022-06-10T16:28:26 IST" duration-ms="27457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putAway -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.PutAway@75d3a5e0]" started-at="2022-06-10T16:28:26 IST" name="getResult" finished-at="2022-06-10T16:28:26 IST" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=putAway status=SUCCESS method=PutAway.putAway()[pri:0, instance:netAgent_Inventory.PutAway@75d3a5e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.PutAway -->
    </test> <!-- PutAway -->
    <test started-at="2022-06-10T16:28:26 IST" name="ASN Log" finished-at="2022-06-10T16:29:44 IST" duration-ms="78007">
      <class name="netAgent_Inventory.ASNLog">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Inventory.ASNLog@795509d9]" started-at="2022-06-10T16:28:26 IST" name="testMethodName" finished-at="2022-06-10T16:28:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Inventory.ASNLog.aSNLog() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="aSNLog()[pri:0, instance:netAgent_Inventory.ASNLog@795509d9]" started-at="2022-06-10T16:28:26 IST" name="aSNLog" finished-at="2022-06-10T16:29:44 IST" duration-ms="77867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aSNLog -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Inventory.ASNLog@795509d9]" started-at="2022-06-10T16:29:44 IST" name="getResult" finished-at="2022-06-10T16:29:44 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=aSNLog status=SUCCESS method=ASNLog.aSNLog()[pri:0, instance:netAgent_Inventory.ASNLog@795509d9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Inventory.ASNLog -->
    </test> <!-- ASN Log -->
    <test started-at="2022-06-10T16:29:44 IST" name="Agent Activity" finished-at="2022-06-10T16:41:15 IST" duration-ms="690249">
      <class name="netAgent_Reports.AgentActivity">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.AgentActivity@4b013c76]" started-at="2022-06-10T16:29:44 IST" name="testMethodName" finished-at="2022-06-10T16:29:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.AgentActivity.AgentActivityReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityReport()[pri:0, instance:netAgent_Reports.AgentActivity@4b013c76]" started-at="2022-06-10T16:29:44 IST" name="AgentActivityReport" finished-at="2022-06-10T16:41:14 IST" duration-ms="689898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.AgentActivity@4b013c76]" started-at="2022-06-10T16:41:14 IST" name="getResult" finished-at="2022-06-10T16:41:15 IST" duration-ms="347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityReport status=SUCCESS method=AgentActivity.AgentActivityReport()[pri:0, instance:netAgent_Reports.AgentActivity@4b013c76] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.AgentActivity -->
    </test> <!-- Agent Activity -->
    <test started-at="2022-06-10T16:41:15 IST" name="Agent Activity Chart" finished-at="2022-06-10T16:41:51 IST" duration-ms="36134">
      <class name="netAgent_Reports.AgentActivityChart">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.AgentActivityChart@1c5920df]" started-at="2022-06-10T16:41:15 IST" name="testMethodName" finished-at="2022-06-10T16:41:15 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.AgentActivityChart.AgentActivityChartReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityChartReport()[pri:0, instance:netAgent_Reports.AgentActivityChart@1c5920df]" started-at="2022-06-10T16:41:15 IST" name="AgentActivityChartReport" finished-at="2022-06-10T16:41:51 IST" duration-ms="35908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityChartReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.AgentActivityChart@1c5920df]" started-at="2022-06-10T16:41:51 IST" name="getResult" finished-at="2022-06-10T16:41:51 IST" duration-ms="218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityChartReport status=SUCCESS method=AgentActivityChart.AgentActivityChartReport()[pri:0, instance:netAgent_Reports.AgentActivityChart@1c5920df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.AgentActivityChart -->
    </test> <!-- Agent Activity Chart -->
    <test started-at="2022-06-10T16:41:51 IST" name="Agent Activity Detail" finished-at="2022-06-10T16:42:26 IST" duration-ms="35641">
      <class name="netAgent_Reports.AgentActivityDetail">
        <test-method signature="agentActivityDetailReport()[pri:0, instance:netAgent_Reports.AgentActivityDetail@1349883]" started-at="2022-06-10T16:41:51 IST" name="agentActivityDetailReport" finished-at="2022-06-10T16:42:26 IST" duration-ms="35437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentActivityDetailReport -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.AgentActivityDetail@1349883]" started-at="2022-06-10T16:41:51 IST" name="testMethodName" finished-at="2022-06-10T16:41:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.AgentActivityDetail.agentActivityDetailReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.AgentActivityDetail@1349883]" started-at="2022-06-10T16:42:26 IST" name="getResult" finished-at="2022-06-10T16:42:26 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=agentActivityDetailReport status=SUCCESS method=AgentActivityDetail.agentActivityDetailReport()[pri:0, instance:netAgent_Reports.AgentActivityDetail@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.AgentActivityDetail -->
    </test> <!-- Agent Activity Detail -->
    <test started-at="2022-06-10T16:42:26 IST" name="Quarantine Report" finished-at="2022-06-10T16:42:57 IST" duration-ms="30785">
      <class name="netAgent_Reports.QuarantineReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.QuarantineReport@2d901eb0]" started-at="2022-06-10T16:42:26 IST" name="testMethodName" finished-at="2022-06-10T16:42:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.QuarantineReport.quarantineReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="quarantineReport()[pri:0, instance:netAgent_Reports.QuarantineReport@2d901eb0]" started-at="2022-06-10T16:42:26 IST" name="quarantineReport" finished-at="2022-06-10T16:42:57 IST" duration-ms="30593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quarantineReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.QuarantineReport@2d901eb0]" started-at="2022-06-10T16:42:57 IST" name="getResult" finished-at="2022-06-10T16:42:57 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=quarantineReport status=SUCCESS method=QuarantineReport.quarantineReport()[pri:0, instance:netAgent_Reports.QuarantineReport@2d901eb0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.QuarantineReport -->
    </test> <!-- Quarantine Report -->
    <test started-at="2022-06-10T16:42:57 IST" name="RTE Driver Billing Report" finished-at="2022-06-10T16:43:29 IST" duration-ms="32009">
      <class name="netAgent_Reports.RTEDriverBilling">
        <test-method signature="rteDriverBillingReport()[pri:0, instance:netAgent_Reports.RTEDriverBilling@909217e]" started-at="2022-06-10T16:42:57 IST" name="rteDriverBillingReport" finished-at="2022-06-10T16:43:29 IST" duration-ms="31767" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rteDriverBillingReport -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.RTEDriverBilling@909217e]" started-at="2022-06-10T16:42:57 IST" name="testMethodName" finished-at="2022-06-10T16:42:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.RTEDriverBilling.rteDriverBillingReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.RTEDriverBilling@909217e]" started-at="2022-06-10T16:43:29 IST" name="getResult" finished-at="2022-06-10T16:43:29 IST" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rteDriverBillingReport status=SUCCESS method=RTEDriverBilling.rteDriverBillingReport()[pri:0, instance:netAgent_Reports.RTEDriverBilling@909217e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.RTEDriverBilling -->
    </test> <!-- RTE Driver Billing Report -->
    <test started-at="2022-06-10T16:43:29 IST" name="Inventory OnHand Report" finished-at="2022-06-10T16:44:14 IST" duration-ms="44484">
      <class name="netAgent_Reports.InventoryOnHandReport">
        <test-method signature="OnHandReport()[pri:0, instance:netAgent_Reports.InventoryOnHandReport@5e2c3d18]" started-at="2022-06-10T16:43:29 IST" name="OnHandReport" finished-at="2022-06-10T16:44:13 IST" duration-ms="44237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnHandReport -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryOnHandReport@5e2c3d18]" started-at="2022-06-10T16:43:29 IST" name="testMethodName" finished-at="2022-06-10T16:43:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryOnHandReport.OnHandReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryOnHandReport@5e2c3d18]" started-at="2022-06-10T16:44:13 IST" name="getResult" finished-at="2022-06-10T16:44:14 IST" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OnHandReport status=SUCCESS method=InventoryOnHandReport.OnHandReport()[pri:0, instance:netAgent_Reports.InventoryOnHandReport@5e2c3d18] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryOnHandReport -->
    </test> <!-- Inventory OnHand Report -->
    <test started-at="2022-06-10T16:44:14 IST" name="Inventory Pull Report" finished-at="2022-06-10T16:44:58 IST" duration-ms="43875">
      <class name="netAgent_Reports.InventoryPullReport">
        <test-method signature="PullReport()[pri:0, instance:netAgent_Reports.InventoryPullReport@16eb3ea3]" started-at="2022-06-10T16:44:14 IST" name="PullReport" finished-at="2022-06-10T16:44:57 IST" duration-ms="43687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PullReport -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryPullReport@16eb3ea3]" started-at="2022-06-10T16:44:14 IST" name="testMethodName" finished-at="2022-06-10T16:44:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryPullReport.PullReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryPullReport@16eb3ea3]" started-at="2022-06-10T16:44:57 IST" name="getResult" finished-at="2022-06-10T16:44:58 IST" duration-ms="182" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PullReport status=SUCCESS method=InventoryPullReport.PullReport()[pri:0, instance:netAgent_Reports.InventoryPullReport@16eb3ea3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryPullReport -->
    </test> <!-- Inventory Pull Report -->
    <test started-at="2022-06-10T16:44:58 IST" name="Inventory Receipt Report" finished-at="2022-06-10T16:45:41 IST" duration-ms="43074">
      <class name="netAgent_Reports.InventoryReceiptReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryReceiptReport@353352b6]" started-at="2022-06-10T16:44:58 IST" name="testMethodName" finished-at="2022-06-10T16:44:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryReceiptReport.ReceiptReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ReceiptReport()[pri:0, instance:netAgent_Reports.InventoryReceiptReport@353352b6]" started-at="2022-06-10T16:44:58 IST" name="ReceiptReport" finished-at="2022-06-10T16:45:40 IST" duration-ms="42750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiptReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryReceiptReport@353352b6]" started-at="2022-06-10T16:45:40 IST" name="getResult" finished-at="2022-06-10T16:45:41 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiptReport status=SUCCESS method=InventoryReceiptReport.ReceiptReport()[pri:0, instance:netAgent_Reports.InventoryReceiptReport@353352b6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryReceiptReport -->
    </test> <!-- Inventory Receipt Report -->
    <test started-at="2022-06-10T16:45:41 IST" name="Inventory Transaction Report" finished-at="2022-06-10T16:46:29 IST" duration-ms="48401">
      <class name="netAgent_Reports.InventoryTransactionReport">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Reports.InventoryTransactionReport@5386659f]" started-at="2022-06-10T16:45:41 IST" name="testMethodName" finished-at="2022-06-10T16:45:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Reports.InventoryTransactionReport.TransactionReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="TransactionReport()[pri:0, instance:netAgent_Reports.InventoryTransactionReport@5386659f]" started-at="2022-06-10T16:45:41 IST" name="TransactionReport" finished-at="2022-06-10T16:46:29 IST" duration-ms="48098" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Reports.InventoryTransactionReport@5386659f]" started-at="2022-06-10T16:46:29 IST" name="getResult" finished-at="2022-06-10T16:46:29 IST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionReport status=SUCCESS method=InventoryTransactionReport.TransactionReport()[pri:0, instance:netAgent_Reports.InventoryTransactionReport@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Reports.InventoryTransactionReport -->
    </test> <!-- Inventory Transaction Report -->
    <test started-at="2022-06-10T16:46:29 IST" name="User Profile" finished-at="2022-06-10T16:46:37 IST" duration-ms="7552">
      <class name="netAgent_Admin.UserProfile">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Admin.UserProfile@5b247367]" started-at="2022-06-10T16:46:29 IST" name="testMethodName" finished-at="2022-06-10T16:46:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Admin.UserProfile.userprofile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="userprofile()[pri:0, instance:netAgent_Admin.UserProfile@5b247367]" started-at="2022-06-10T16:46:29 IST" name="userprofile" finished-at="2022-06-10T16:46:36 IST" duration-ms="7286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userprofile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Admin.UserProfile@5b247367]" started-at="2022-06-10T16:46:36 IST" name="getResult" finished-at="2022-06-10T16:46:37 IST" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userprofile status=SUCCESS method=UserProfile.userprofile()[pri:0, instance:netAgent_Admin.UserProfile@5b247367] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Admin.UserProfile -->
    </test> <!-- User Profile -->
    <test started-at="2022-06-10T16:46:37 IST" name="UserList" finished-at="2022-06-10T16:47:08 IST" duration-ms="31299">
      <class name="netAgent_Admin.UserList">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Admin.UserList@31ea9581]" started-at="2022-06-10T16:46:37 IST" name="testMethodName" finished-at="2022-06-10T16:46:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Admin.UserList.userlist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="userlist()[pri:0, instance:netAgent_Admin.UserList@31ea9581]" started-at="2022-06-10T16:46:37 IST" name="userlist" finished-at="2022-06-10T16:47:08 IST" duration-ms="31065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userlist -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Admin.UserList@31ea9581]" started-at="2022-06-10T16:47:08 IST" name="getResult" finished-at="2022-06-10T16:47:08 IST" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userlist status=SUCCESS method=UserList.userlist()[pri:0, instance:netAgent_Admin.UserList@31ea9581] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Admin.UserList -->
    </test> <!-- UserList -->
    <test started-at="2022-06-10T16:47:08 IST" name="Agent Console" finished-at="2022-06-10T16:47:51 IST" duration-ms="42967">
      <class name="netAgent_Tools.AgentConsole">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Tools.AgentConsole@2b40ff9c]" started-at="2022-06-10T16:47:08 IST" name="testMethodName" finished-at="2022-06-10T16:47:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Tools.AgentConsole.agentConsole() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="agentConsole()[pri:0, instance:netAgent_Tools.AgentConsole@2b40ff9c]" started-at="2022-06-10T16:47:08 IST" name="agentConsole" finished-at="2022-06-10T16:47:51 IST" duration-ms="42724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- agentConsole -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Tools.AgentConsole@2b40ff9c]" started-at="2022-06-10T16:47:51 IST" name="getResult" finished-at="2022-06-10T16:47:51 IST" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=agentConsole status=SUCCESS method=AgentConsole.agentConsole()[pri:0, instance:netAgent_Tools.AgentConsole@2b40ff9c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Tools.AgentConsole -->
    </test> <!-- Agent Console -->
    <test started-at="2022-06-10T16:47:51 IST" name="Mileage Calculation" finished-at="2022-06-10T16:48:21 IST" duration-ms="30302">
      <class name="netAgent_Tools.MileageCalc">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Tools.MileageCalc@496bc455]" started-at="2022-06-10T16:47:51 IST" name="testMethodName" finished-at="2022-06-10T16:47:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Tools.MileageCalc.mileageCalc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="mileageCalc()[pri:0, instance:netAgent_Tools.MileageCalc@496bc455]" started-at="2022-06-10T16:47:51 IST" name="mileageCalc" finished-at="2022-06-10T16:48:21 IST" duration-ms="30011" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mileageCalc -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Tools.MileageCalc@496bc455]" started-at="2022-06-10T16:48:21 IST" name="getResult" finished-at="2022-06-10T16:48:21 IST" duration-ms="288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mileageCalc status=SUCCESS method=MileageCalc.mileageCalc()[pri:0, instance:netAgent_Tools.MileageCalc@496bc455] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Tools.MileageCalc -->
    </test> <!-- Mileage Calculation -->
    <test started-at="2022-06-10T16:48:21 IST" name="MNXDocuments" finished-at="2022-06-10T16:48:37 IST" duration-ms="16008">
      <class name="netAgent_Tools.MNXDocuments">
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Tools.MNXDocuments@303cf2ba]" started-at="2022-06-10T16:48:21 IST" name="testMethodName" finished-at="2022-06-10T16:48:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Tools.MNXDocuments.MNXDoc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="MNXDoc()[pri:0, instance:netAgent_Tools.MNXDocuments@303cf2ba]" started-at="2022-06-10T16:48:21 IST" name="MNXDoc" finished-at="2022-06-10T16:48:37 IST" duration-ms="15800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MNXDoc -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Tools.MNXDocuments@303cf2ba]" started-at="2022-06-10T16:48:37 IST" name="getResult" finished-at="2022-06-10T16:48:37 IST" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MNXDoc status=SUCCESS method=MNXDocuments.MNXDoc()[pri:0, instance:netAgent_Tools.MNXDocuments@303cf2ba] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Tools.MNXDocuments -->
    </test> <!-- MNXDocuments -->
    <test started-at="2022-06-10T16:48:37 IST" name="User Preferences" finished-at="2022-06-10T16:49:37 IST" duration-ms="60148">
      <class name="netAgent_Preferences.UserPreferences">
        <test-method signature="UserPreference()[pri:0, instance:netAgent_Preferences.UserPreferences@359df09a]" started-at="2022-06-10T16:48:37 IST" name="UserPreference" finished-at="2022-06-10T16:49:37 IST" duration-ms="59887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserPreference -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_Preferences.UserPreferences@359df09a]" started-at="2022-06-10T16:48:37 IST" name="testMethodName" finished-at="2022-06-10T16:48:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void netAgent_Preferences.UserPreferences.UserPreference() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_Preferences.UserPreferences@359df09a]" started-at="2022-06-10T16:49:37 IST" name="getResult" finished-at="2022-06-10T16:49:37 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserPreference status=SUCCESS method=UserPreferences.UserPreference()[pri:0, instance:netAgent_Preferences.UserPreferences@359df09a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
      </class> <!-- netAgent_Preferences.UserPreferences -->
    </test> <!-- User Preferences -->
    <test started-at="2022-06-10T16:49:37 IST" name="OrderProcessing " finished-at="2022-06-10T17:32:04 IST" duration-ms="2546985">
      <class name="netAgent_OperationsTab.OrderProcessing">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:netAgent_OperationsTab.OrderProcessing@7fd50002]" started-at="2022-06-10T16:11:44 IST" name="beforeMethod" finished-at="2022-06-10T16:12:07 IST" duration-ms="22395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:netAgent_OperationsTab.OrderProcessing@7fd50002]" started-at="2022-06-10T16:49:37 IST" name="testMethodName" finished-at="2022-06-10T16:49:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void netAgent_OperationsTab.OrderProcessing.orderProcess() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="orderProcess()[pri:0, instance:netAgent_OperationsTab.OrderProcessing@7fd50002]" started-at="2022-06-10T16:49:37 IST" name="orderProcess" finished-at="2022-06-10T17:32:04 IST" duration-ms="2546545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderProcess -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:netAgent_OperationsTab.OrderProcessing@7fd50002]" started-at="2022-06-10T17:32:04 IST" name="getResult" finished-at="2022-06-10T17:32:04 IST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderProcess status=SUCCESS method=OrderProcessing.orderProcess()[pri:0, instance:netAgent_OperationsTab.OrderProcessing@7fd50002] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="SendEmail()[pri:0, instance:netAgent_OperationsTab.OrderProcessing@7fd50002]" started-at="2022-06-10T17:32:04 IST" name="SendEmail" finished-at="2022-06-10T17:32:31 IST" duration-ms="26499" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendEmail -->
      </class> <!-- netAgent_OperationsTab.OrderProcessing -->
    </test> <!-- OrderProcessing  -->
  </suite> <!-- NetAgentSmokeTest -->
</testng-results>
